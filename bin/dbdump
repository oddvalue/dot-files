#!/usr/bin/env bash

if test -z $1 ; then
    if test -f ./.env ; then
        source ./.env
        echo "./vendor/bin/sail exec -T laravel.test mysqldump -h $DB_HOST -u $DB_USERNAME -p$DB_PASSWORD $DB_DATABASE > $(date +'dev-%Y-%m-%d_%H%M%S').sql"
        ./vendor/bin/sail exec -T laravel.test mysqldump --column-statistics=0 --no-tablespaces -h $DB_HOST -u $DB_USERNAME -p$DB_PASSWORD $DB_DATABASE > $(date +'dev-%Y-%m-%d_%H%M%S').sql
        exit 0
    fi
    echo "Please specify a remote"
    exit 1
fi

PROJECT_PATH=$2
if test -z "$PROJECT_PATH" ; then
    PROJECT_PATH='project'
fi

if ! grep $1 ~/.ssh/config ; then
    echo "Remote '$1' not set up"
    exit 1
fi
ENV=$(ssh $1 cat $PROJECT_PATH/.env)
if test -z "$ENV" ; then
    echo "Unable to find env file on remote"
    exit 1
fi
source <(echo "$ENV")
ssh $1 "mysqldump -h $DB_HOST -u $DB_USERNAME -p$DB_PASSWORD $DB_DATABASE | gzip -9" > $1.sql.gz
gunzip $1.sql.gz
echo "$1.sql"

read -r -p "Run 'dbrestore $1.sql'? [Y/n] " input

case $input in
    [yY][eE][sS]|[yY]|"")
 dbrestore $1.sql
 ;;
    [nN][oO]|[nN])
 exit 1
 ;;
    *)
 echo "Invalid input..."
 exit 1
 ;;
esac
